preprocess:
  "%CLIENT_RELEASE_LABEL%": r0
  "%CLIENT_MAJOR_VERSION%": r0

# Structure:
# swaggerType: <targetTypeSpec>
# OR
# swaggerType:
#   - swaggerFormat: <targetTypeSpec>
#   - /swaggerFormatRegEx/: <targetTypeSpec>
#   - //: <targetTypeSpec> # default, if the format doesn't mach anything above
# WHERE
# targetTypeSpec = targetType OR
#   { type: targetType, imports: <filename OR [ filenames... ]>, <other attributes...> }
types:
  integer:
  - int64: qint64
  - int32: qint32
  - //: int
  number:
  - float: float
  - //: double
  boolean: bool
  string:
  - byte: &QByteArray { type: QByteArray, imports: <QtCore/QByteArray> }
  - binary: *QByteArray
  - date:
      type: QDate
      avoidCopy?: true
      imports: <QtCore/QDate>
  - dateTime:
      type: QDateTime
      avoidCopy?: true
      imports: <QtCore/QDateTime>
  - //: { type: QString, imports: <QtCore/QString> }
  file:
    type: QByteArray
    imports: <QtCore/QByteArray>
    "returnFile?": true
  object: { type: QJsonObject, "avoidCopy?": true, imports: <QtCore/QJsonObject> }
  array: { type: "QVector<{{1}}>", "avoidCopy?": true, imports: <QtCore/QVector> }

#operations:

env:
#  preamble: preamble.mustache
  copyrightName: Kitsune Ral
  copyrightEmail: <kitsune-ral@users.sf.net>
#  imports: { set: }
#  returnFile?: { bool: false }

templates:
- "{{base}}.h.mustache"
- "{{base}}.cpp.mustache"

#outFilesList: apifiles.txt

