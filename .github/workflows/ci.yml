name: CMake

on: [push]

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
#      max-parallel: 1
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        e2ee: ['e2ee', '']
        compilers: [ 'CC=gcc CXX=g++', 'CC=clang CXX=clang++']
        exclude:
        - os: macos-10.15
          compilers: 'CC=gcc CXX=g++'

    env:
      DESTDIR: ${{ github.workspace }}
      CMAKE_ARGS: '-DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_PREFIX_PATH=${{ github.workspace }}/usr'

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: ${{ matrix.e2ee == 'e2ee' }}

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v2
      with:
        path: ${{ runner.workspace }}/Qt
        key: ${{ runner.os }}-QtCache

    - name: Install Qt
      uses: jurplel/install-qt-action@v2.11.1
      with:
        version: '5.9.9'
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: Create Build Environment
      run: cmake -E make_directory ${{ runner.workspace }}/build

    - name: Build and install olm
      if: ${{ matrix.e2ee == 'e2ee' }}
      run: |
        git clone https://gitlab.matrix.org/matrix-org/olm.git
        pushd olm
        cmake . -Bbuild $CMAKE_ARGS
        cmake --build build --target install
        popd

    - name: Configure libQuotient
      run: |
        export ${{ matrix.compilers }}
        cmake $GITHUB_WORKSPACE -Bbuild $CMAKE_ARGS -DQuotient_ENABLE_E2EE=${{ matrix.e2ee == 'e2ee' }}

    - name: Build and install libQuotient
      run: cmake --build build --target install

    - name: Build tests
      run: |
        cmake tests -Bbuild-test $CMAKE_ARGS
        cmake --build build-test --target all
        
#    - name: Run tests
#      run: build-test/quotest 
